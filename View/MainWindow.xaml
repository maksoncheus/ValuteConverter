<Window x:Class="ValuteConverter.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:ValuteConverter"
        mc:Ignorable="d"
        Title="ValuteConverter" Height="200" Width="630" ResizeMode="NoResize" WindowStyle="SingleBorderWindow" WindowStartupLocation="CenterScreen">
    <Window.DataContext>
        <local:ViewModel/>
    </Window.DataContext>
    <Window.Resources>
        <SolidColorBrush x:Key="BackGroundColor" Color="#18181A"/>
        <SolidColorBrush x:Key="MainColor" Color="#FFABADB3"/>
        <SolidColorBrush x:Key="HighLightColor" Color="LightGray"/>
        <Style x:Key="TextBoxStyle" TargetType="TextBox">
            <Setter Property="Background" Value="{StaticResource BackGroundColor}"/>
            <Setter Property="Foreground" Value="{StaticResource HighLightColor}"/>
            <Setter Property="Padding" Value="15"/>
            <Setter Property="FontSize" Value="16"/>
            <Style.Resources>
                <Style TargetType="Border">
                    <Setter Property="CornerRadius" Value="15,0,0,15"/>
                </Style>
            </Style.Resources>
        </Style>
        <ControlTemplate x:Key="NoMouseOverButtonTemplate"   
                 TargetType="Button">
            <Border Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}">
                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
            </Border>

            <ControlTemplate.Triggers>
                <Trigger Property="IsEnabled"
                         Value="False">
                    <Setter Property="Background"
                            Value="{x:Static SystemColors.ControlLightBrush}" />
                    <Setter Property="Foreground"
                            Value="{x:Static SystemColors.GrayTextBrush}" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <Style x:Key="ComboboxButtonStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border
                            Background="Transparent"
                            x:Name="border"
                            BorderThickness="1,1,1,1"
                            BorderBrush="Transparent">
                            <ContentPresenter />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ComboboxStyle" TargetType="ComboBox">
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="VerticalContentAlignment" Value="Stretch"/>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>

                            <ContentPresenter Name="ContentSite"
                                              Content="{TemplateBinding SelectionBoxItem}"
                                              ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                              ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                              VerticalAlignment="Center"
                                              HorizontalAlignment="Left"
                                              Margin="5,0,0,0"/>
                            <Popup Name="Popup"
                                   Placement="Bottom"
                                   IsOpen="{TemplateBinding IsDropDownOpen}"
                                   AllowsTransparency="True"
                                   Focusable="False"
                                   PopupAnimation="Slide">
                                <Grid Name="DropDown"
                                      SnapsToDevicePixels="True"
                                      MinWidth="{TemplateBinding ActualWidth}"
                                      MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                    <Border Background="{StaticResource BackGroundColor}">
                                        <ScrollViewer SnapsToDevicePixels="True">
                                            <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained"/>
                                        </ScrollViewer>
                                    </Border>
                                </Grid>
                            </Popup>
                            <ToggleButton Grid.Column="1" Margin="0"
                                          Height="{TemplateBinding Height}"
                                          Style="{StaticResource ComboboxButtonStyle}"
                                          Focusable="False"
                                          IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                          ClickMode="Press">
                                <ToggleButton.Content>
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition/>
                                            <ColumnDefinition/>
                                        </Grid.ColumnDefinitions>
                                        <Path Grid.Column="1"
                                              VerticalAlignment="Center"
                                              HorizontalAlignment="Center"
                                              Fill="{StaticResource HighLightColor}" >
                                            <Path.Data>
                                                <PathGeometry>
                                                    <PathFigure IsClosed="True" IsFilled="True" StartPoint="4, 4">
                                                        <LineSegment Point="0, 10"/>
                                                        <LineSegment Point="8, 10"/>
                                                    </PathFigure>
                                                    <PathFigure IsClosed="True" IsFilled="True" StartPoint="0, 12">
                                                        <LineSegment Point="8, 12"/>
                                                        <LineSegment Point="4, 18"/>
                                                    </PathFigure>
                                                </PathGeometry>
                                            </Path.Data>
                                        </Path>
                                    </Grid>
                                </ToggleButton.Content>
                            </ToggleButton>
                        </Grid>

                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ComboBoxItemTemplate" TargetType="ComboBoxItem">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBoxItem">
                        <ControlTemplate.Resources>
                        </ControlTemplate.Resources>
                        <Border Width="auto" x:Name="border"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}">
                            <TextBlock Width="auto">
                                <TextBlock.Text>
                                    <MultiBinding StringFormat="{}{0}  {1}">
                                        <Binding Path="ValuteCode"/>
                                        <Binding Path="ValuteName"/>
                                    </MultiBinding>
                                </TextBlock.Text>
                            </TextBlock>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsHighlighted" Value="True">
                                <Setter TargetName="border" Property="Background" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Window.Style>
        <Style TargetType="Window">
            <Setter Property="Background" Value="{StaticResource BackGroundColor}"/>
        </Style>
    </Window.Style>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="3*"/>
            <ColumnDefinition/>
            <ColumnDefinition Width="3*"/>
        </Grid.ColumnDefinitions>
        <Grid Margin="15" Grid.Column="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="0.7*"/>
                <ColumnDefinition Width="0.3*"/>
            </Grid.ColumnDefinitions>
            <TextBox Style="{StaticResource ResourceKey=TextBoxStyle}" CommandManager.PreviewExecuted="TextBox_PreviewExecuted" AllowDrop="False" Text="{Binding LeftText, Mode=Default, UpdateSourceTrigger=PropertyChanged}" Padding="15" PreviewTextInput="TextBox_PreviewTextInput" Grid.Column="0"/>
            <Border Grid.Column="1" BorderThickness="1" Margin="-1,0,0,0" BorderBrush="{StaticResource MainColor}" CornerRadius="0,15,15,0">
                <ComboBox SelectedItem="{Binding SelectedValuteLeft}"
                          Foreground="{StaticResource HighLightColor}"
                          Style="{StaticResource ComboboxStyle}"
                          ItemsSource="{Binding ValuteEntries}"
                          ItemContainerStyle="{StaticResource ComboBoxItemTemplate}">
                    <ComboBox.ItemTemplate>
                        <DataTemplate>
                            <TextBlock>
                                <TextBlock.Text>
                                    <MultiBinding StringFormat="{}{0}">
                                        <Binding Path="ValuteCode"/>
                                        <Binding Path="ValuteCourse"/>
                                    </MultiBinding>
                                </TextBlock.Text>
                            </TextBlock>
                        </DataTemplate>
                    </ComboBox.ItemTemplate>
                </ComboBox>
            </Border>

        </Grid>

        <Button Width="30" Height="30" Template="{StaticResource NoMouseOverButtonTemplate}" Grid.Column="1" Margin="15" Background="Transparent" BorderThickness="0" Command="{Binding ChangeSides}">
            <Button.Content>
                <TextBlock VerticalAlignment="Center" FontSize="32" Text="⇆"/>
            </Button.Content>
            <Button.Style>
                <Style TargetType="Button">
                    <Setter Property="Foreground" Value="Gray"/>
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="{StaticResource HighLightColor}"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>

        <Grid Margin="15" Grid.Column="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="0.7*"/>
                <ColumnDefinition Width="0.3*"/>
            </Grid.ColumnDefinitions>
            <TextBox Style="{StaticResource ResourceKey=TextBoxStyle}" CommandManager.PreviewExecuted="TextBox_PreviewExecuted" AllowDrop="False" Text="{Binding RightText, Mode=Default, UpdateSourceTrigger=PropertyChanged}" Padding="15" PreviewTextInput="TextBox_PreviewTextInput" Grid.Column="0"/>
            <Border Grid.Column="1" Margin="-1,0,0,0" BorderThickness="1" BorderBrush="{StaticResource MainColor}" CornerRadius="0,15,15,0">
                <ComboBox SelectedItem="{Binding SelectedValuteRight}"  Foreground="{StaticResource HighLightColor}" Style="{StaticResource ComboboxStyle}"
                          ItemsSource="{Binding ValuteEntries}" ItemContainerStyle="{StaticResource ComboBoxItemTemplate}">
                    <ComboBox.ItemTemplate>
                        <DataTemplate>
                            <TextBlock>
                                <TextBlock.Text>
                                    <MultiBinding StringFormat="{}{0}">
                                        <Binding Path="ValuteCode"/>
                                        <Binding Path="ValuteCourse"/>
                                    </MultiBinding>
                                </TextBlock.Text>
                            </TextBlock>
                        </DataTemplate>
                    </ComboBox.ItemTemplate>
                </ComboBox>
            </Border>
        </Grid>

        <Grid Grid.Row="2" Grid.ColumnSpan="3" Grid.Column="0">
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <TextBlock Foreground="{StaticResource MainColor}">
                <TextBlock.Text>
                    <MultiBinding StringFormat="{}1 {0} = {1} {2}">
                        <Binding Path="SelectedValuteLeft.ValuteName"/>
                        <Binding Path="OneUnitRate"/>
                        <Binding Path="SelectedValuteRight.ValuteName"/>
                    </MultiBinding>
                </TextBlock.Text>
            </TextBlock>
            <TextBlock Foreground="{StaticResource MainColor}" Text ="{Binding DateText, StringFormat={}{0:c} • ЦБ РФ}" Grid.Row="2" VerticalAlignment="Center"/>
        </Grid>
        <Border Grid.ColumnSpan="3" Grid.RowSpan="2" Opacity="0.85" Background="Gray">
            <Border.Style>
                <Style TargetType="Border">
                    <Setter Property="Visibility" Value="Hidden"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding ValuteEntries.Count}" Value="0">
                            <Setter Property="Visibility" Value="Visible"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Border.Style>
            <TextBlock Text="⚙" VerticalAlignment="Center" HorizontalAlignment="Center" FontSize="108" Foreground="White" RenderTransformOrigin="0.5, 0.5" Height="164">
                <TextBlock.Style>
                    <Style TargetType="TextBlock">
                        <Setter Property="RenderTransform">
                            <Setter.Value>
                                <RotateTransform Angle="0"/>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <EventTrigger RoutedEvent="Loaded">
                                <BeginStoryboard>
                                    <Storyboard x:Name="loadingAnimation"
                                                RepeatBehavior="Forever">
                                        <DoubleAnimation Duration="0:0:2"
                                                         From="0"
                                                         To="360"
                                                          Storyboard.TargetProperty="(RenderTransform).Angle"/>

                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                        </Style.Triggers>
                    </Style>
                </TextBlock.Style>
            </TextBlock>
        </Border>
    </Grid>
</Window>